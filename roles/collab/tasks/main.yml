---
- name: Install docker python library (apt)
  ansible.builtin.apt:
    name: python3-docker
    state: present
    cache_valid_time: 3600  # Only run "update_cache=yes" if the last one is more than 3600 seconds ago
    # skip_pgp_check: yes # <-- Avoid extra step of having to load maintainer's key
  tags:
    - packages
  when: ansible_facts['distribution'] in ["Debian", "Ubuntu"]

- name: Install docker python library (pacman)
  become: true
  community.general.pacman:
    name: 
      - python-docker
    state: present
  tags:
    - packages
  when: ansible_facts['distribution'] == "Archlinux"
  environment: "{{proxy_env}}"

- name: Install backup/restore software and firewall
  become: true
  ansible.builtin.package:
    name:
      - rclone
      - ufw
    state: present
  tags:
    - packages
  environment: "{{proxy_env}}"

- name: Create rclone configuration for Nextcloud
  become: true
  ansible.builtin.template:
    src: nextcloud_rclone_conf.j2
    dest: "{{ collab_rclone_conf }}"
    mode: '0700'
    owner: root
    group: root

- name: Create media group
  ansible.builtin.group:
    name: media
    state: present
    gid: 497

- name: Create nextcloud data directory
  ansible.builtin.file:
    path: "{{ collabdatadir }}"
    state: directory
    mode: '0710'  # <-- allow members of media group to access to media
    owner: "{{ collab_owner }}"
    group: media

- name: Create nextcloud backup directory
  ansible.builtin.file:
    path: "{{ collabbackupdir }}"
    state: directory
    mode: '0700'
    owner: root
    group: root

# The original nextcloud data dir seems to be hardcoded in the blomp backup.
# This is a workaround until I find a way to change the dir in the backup.
- name: Create link necessary to restore nextcloud from backup 
  ansible.builtin.file:
    src: "{{ collabdatadir }}"
    dest: /home/lance/docker/appdata/nextcloud
    state: link
    force: true

- name: Restore nextcloud backup folder from cloud
  become: true
  ansible.builtin.shell: |
    rclone sync blomp-encrypted:nc {{ collabbackupdir }}/ --config {{ collab_rclone_conf }}

- name: Start 'nextcloud-all-in-one' container
  community.docker.docker_container:
    name: nextcloud-aio-mastercontainer
    image: nextcloud/all-in-one:latest
    state: started
    restart_policy: unless-stopped
    volumes:
      - nextcloud_aio_mastercontainer:/mnt/docker-aio-config
      - /var/run/docker.sock:/var/run/docker.sock:ro
    published_ports:
      - "80:80"
      - "8080:8080"
      - "8443:8443"
    env:
      NEXTCLOUD_DATADIR: "{{ collabdatadir }}"
      NEXTCLOUD_ENABLE_DRI_DEVICE: "true"
      # Values which might be parsed as numbers, booleans or other types by the YAML parser need to be quoted
      NEXTCLOUD_UPLOAD_LIMIT: "10G"

- name: Configure Nextcloud firewall exception
  ansible.builtin.copy:
    src: ufw-nextcloud-aio
    dest: /etc/ufw/applications.d/nextcloud-aio
    backup: yes

- name: Open Nexcloud ports
  community.general.ufw:
    rule: allow
    name: nextcloud-all
    comment: Nextcloud all-in-one
  become: true

- name: Allow Docker bridges to access everything on this host
  community.general.ufw:
    rule: allow
    src: 172.17.0.0/16
    comment: Docker containers

- name: Allow Docker bridges to access DNS on this host
  community.general.ufw:
    rule: allow
    port: '53'
    src: 172.0.0.0/8
    comment: Docker bridge DNS requests
