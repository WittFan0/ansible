---
- name: Install remote mounting programs
  become: true
  ansible.builtin.package:
    name: "{{ common_mount_client_packages }}"
    state: present
  tags:
    - packages
  environment: "{{ proxy_env }}"

- name: Create samba config directory if it does not exist
  ansible.builtin.file:
    path: /etc/samba
    state: directory
    mode: '0755'

- name: Create tplink credentials file
  ansible.builtin.template:
    src: tplinkcredentials.j2
    dest: /etc/samba/.tplinkcredentials
    mode: '0640'
    backup: true

- name: Setup a user to build AUR packages
  ansible.builtin.include_tasks: ../../common/tasks/aur.yml
  when: ansible_facts['distribution'] == "Archlinux" and aur_ran is not defined

- name: Install davfs2 AUR package to access Nextcloud files
  kewlfft.aur.aur:
    name:
      - davfs2
    state: present
    # skip_pgp_check: true # <-- Avoid extra step of having to load maintainer's key
  tags:
    - aur
    - packages
  become: true
  become_user: "{{ aur.builder }}"
  when: ansible_facts['distribution'] == "Archlinux"

- name: Ensure group davfs exists
  ansible.builtin.group:
    name: davfs2
    state: present

- name: Create directories for remote shares
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - /mnt/router/sda1

- name: Add fstab entries for remote shares
  ansible.builtin.blockinfile:
    path: /etc/fstab
    block: |
      {{ vault_nextcloud_fqdn }}remote.php/dav/files/{{ remote_user.name }}/  /home/{{ remote_user.name }}/nextcloud  davfs  user,rw,noauto                                                                                                                  0  0
      //router/sda1                                         /mnt/router/sda1       cifs   _netdev,credentials=/etc/samba/.tplinkcredentials,uid=1000,gid=499,iocharset=utf8,file_mode=0664,dir_mode=0775,vers=2.0,noauto  0  0
    prepend_newline: true
    append_newline: true
  notify: Reload systemd config
