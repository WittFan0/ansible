---
- name: Set OS distribution dependent variables
  include_vars: "os_{{ ansible_facts['distribution'] }}.yml"

- name: Set the hostname
  hostname:
    name: "{{ hostname }}"
  when: hostname is defined

- name: generate_locales
  ansible.builtin.command: locale-gen en_US en_US.UTF-8
  when: ansible_facts['distribution'] in ["Debian", "Ubuntu"]

- name: Set locale
  ansible.builtin.lineinfile:
    path: /etc/locale.gen
    regexp: '^en_US.UTF-8 '
    line: en_US.UTF-8 UTF-8
  when: ansible_facts['distribution'] == "Archlinux"

- name: Set LANG variable
  ansible.builtin.lineinfile:
    path: /etc/locale.conf
    regexp: '^LANG='
    line: LANG=en_US.UTF-8
  when: ansible_facts['distribution'] == "Archlinux"

# geerlingguy.ntp will overwrite timezone
- name: Set timezone to {{ ntp_timezone }}
  community.general.timezone:
    name: "{{ ntp_timezone }}"

# - name: Set timezone 
#   become: true
#   ansible.builtin.file:
#     src: /usr/share/zoneinfo/{{ ntp_timezone }}
#     dest: /etc/localtime
#     state: link
#     force: true

# - name: Set system clock 
#   ansible.builtin.command: hwclock --systohc --utc
#   become: true

- name: Set bootloader resolution
  lineinfile:
    dest: /etc/default/grub
    regexp: '^GRUB_GFXMODE'
    line: 'GRUB_GFXMODE="{{ grub_gfxmode }}"'
    state: present
  when: grub_gfxmode is defined # and bootloader == 'grub'
  notify:
    - rebuild-grub

- name: Allow the kernel use the same resolution used by grub
  lineinfile:
    dest: /etc/default/grub
    regexp: '^GRUB_GFXPAYLOAD_LINUX'
    line: GRUB_GFXPAYLOAD_LINUX=keep
    state: present
  # when: bootloader == 'grub'
  notify:
    - rebuild-grub

- name: Set kernel parameters
  lineinfile:
    dest: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX_DEFAULT'
    state: present
    line: 'GRUB_CMDLINE_LINUX_DEFAULT="{{ kernel_parameters }}"'
  when: kernel_parameters is defined # and bootloader == 'grub'
  notify:
    - rebuild-grub
  tags:
    - kernelparams

- name: Quiet pam_systemd_home.so warnings
  ansible.builtin.copy:
    src: system-auth
    dest: /etc/pam.d/system-auth
    backup: true
  when: ansible_facts['distribution'] == "Archlinux"

- name: Provide systemd-resolved domain name resolution for software that reads /etc/resolv.conf directly 
  ansible.builtin.file:
    src: /run/systemd/resolve/stub-resolv.conf
    dest: /etc/resolv.conf
    state: link
    force: true

- name: Install user setup script
  ansible.builtin.copy:
    src: user-setup.sh
    dest: /usr/local/sbin/
    mode: '0755'

- include_tasks: netmounts.yml
- include_tasks: discovery.yml
- include_tasks: shell2xdg.yml
- include_tasks: shell.yml
- include_tasks: user.yml
- include_tasks: pacman-aur.yml
  when: ansible_facts['distribution'] == "Archlinux"
- include_tasks: printer.yml
