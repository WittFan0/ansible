---
- name: Set OS distribution dependent variables
  include_vars: "os_{{ ansible_facts['distribution'] }}.yml"

- name: Set the hostname
  hostname:
    name: "{{ hostname }}"
  when: hostname is defined

# - name: Set kernel parameters
#   lineinfile:
#     dest: /etc/default/grub
#     regexp: '^GRUB_CMDLINE_LINUX_DEFAULT'
#     state: present
#     line: 'GRUB_CMDLINE_LINUX_DEFAULT="{{ kernel_parameters }}"'
#   when: kernel_parameters is defined and bootloader == 'grub'
#   notify:
#     - rebuild grub
#   tags:
#     - kernelparams

- name: Copy pacman configuration file
  ansible.builtin.copy:
    src: pacman.conf
    dest: /etc/pacman.conf
    backup: true
  when: ansible_facts['distribution'] == "Archlinux"

- name: Create pacman hook directory
  file: path=/etc/pacman.d/hooks
        state=directory
  tags:
    - packages
  when: ansible_facts['distribution'] == "Archlinux"

- name: Install distro base packages
  ansible.builtin.package:
    name: "{{ distro_packages }}" 
    state: present
    update_cache: true
  tags:
    - packages

- name: Install base packages
  ansible.builtin.package:
    name: "{{ base_packages }}"
    state: present
    update_cache: true
  tags:
    - packages

- name: Configure print system
  ansible.builtin.template:
    src: cupsd_conf.j2
    dest: /etc/cups/cupsd.conf
    backup: yes
  notify: restart_cups

# - name: Quiet pam_systemd_home.so warnings
#   ansible.builtin.copy:
#     src: system-auth
#     dest: /etc/pam.d/system-auth
#     backup: true
#   when: ansible_facts['distribution'] == "Archlinux"

# - include_tasks: shell2xdg.yml
- include_tasks: shell.yml
- include_tasks: user.yml
- include_tasks: pacman-aur.yml
  when: ansible_facts['distribution'] == "Archlinux"
