- name: Set OS distribution dependent variables
  include_vars: "os_{{ ansible_facts['distribution'] }}.yml"

- name: Install KDE packages
  ansible.builtin.package:
    name: "{{ kde_packages }}"
    state: present
    update_cache: true
  tags:
    - packages
  environment: "{{proxy_env}}"

- name: Install KDE AUR pacakges
  kewlfft.aur.aur:
    name: "{{ kde_packages_aur }}"
    state: present
  tags:
    - aur
    - packages
  become: true
  become_user: "{{ aur.builder }}"
  when: ansible_facts['distribution'] == "Archlinux"
  environment: "{{proxy_env}}"

- name: Create settings file for kdesu if it doesn't exist
  ansible.builtin.file:
    path: /home/{{ remote_user.name }}/.config/
    state: directory
    owner: "{{ remote_user.name }}"
    group: "{{ remote_user.group }}"
    mode: '0755'
    recurse: false

- name: Have kdesu use sudo instead of su
  ansible.builtin.copy:
    content: |
      [super-user-command]
      super-user-command=sudo
    dest: /home/{{ remote_user.name }}/.config/kdesurc
    mode: '0644'
    owner: "{{ remote_user.name }}"
    group: "{{ remote_user.group }}"
    backup: true

- name: Create SSDM config directory if it doesn't exist
  ansible.builtin.file:
    path: /etc/sddm.conf.d/
    state: directory
    mode: '0755'

- name: Configure SDDM to use Wayland
  ansible.builtin.copy:
    content: |
      [General]
      DisplayServer=wayland
      GreeterEnvironment=QT_WAYLAND_SHELL_INTEGRATION=layer-shell

      [Wayland]
      CompositorCommand=kwin_wayland --no-lockscreen
    dest: /etc/sddm.conf.d/10-wayland.conf
    mode: '0644'
    backup: false

