---
- name: Set OS distribution dependent variables
  include_vars: "os_{{ ansible_facts['distribution'] }}.yml"

- name: Install development packages
  become: true
  ansible.builtin.package:
    name: "{{ base_dev_packages }}"
    state: present
  tags:
    - packages
  environment: "{{proxy_env}}"

- name: Use all cores when compiling software
  ansible.builtin.lineinfile:
    dest: /etc/makepkg.conf
    regexp: "^MAKEFLAGS="
    line: MAKEFLAGS="-j$(nproc)"
    backup: true

- name: Use all cores when compressing packages (gzip)
  ansible.builtin.lineinfile:
    dest: /etc/makepkg.conf
    regexp: "^COMPRESSGZ="
    line: "COMPRESSGZ=(pigz -c -f -n)"
    backup: true

- name: Use all cores when compressing packages (bzip2)
  ansible.builtin.lineinfile:
    dest: /etc/makepkg.conf
    regexp: "^COMPRESSBZ2="
    line: "COMPRESSBZ2=(pbzip2 -c -f)"
    backup: true

- name: Use all cores when compressing packages (xz)
  ansible.builtin.lineinfile:
    dest: /etc/makepkg.conf
    regexp: "^COMPRESSXZ="
    line: "COMPRESSXZ=(xz -c -z --threads=0 -)"
    backup: true

- name: Use all cores when compressing packages (zstd)
  ansible.builtin.lineinfile:
    dest: /etc/makepkg.conf
    regexp: "^COMPRESSZST="
    line: "COMPRESSZST=(zstd -c -z -q --threads=0 -)"
    backup: true

- name: Install code editor (Arch)
  become: true
  ansible.builtin.package:
    name: 
      - code
      - x11-ssh-askpass
    state: present
  tags:
    - packages
  when: ansible_facts['distribution'] == "Archlinux"
  environment: "{{proxy_env}}"

- name: Install VS Code dependencies (apt)
  become: true
  ansible.builtin.apt:
    name:
      - ca-certificates
      - apt-transport-https
      - gconf2
      - libasound2
      - libgtk2.0-0
      - libxss1
      - libxcb-dri3-0
      - libdrm2
      - libgbm1
      - libxshmfence1
    state: present
  tags:
    - packages
  when: ansible_facts['distribution'] in ["Debian", "Ubuntu"]
  environment: "{{proxy_env}}"

- name: Create APT keyrings dir
  become: true
  ansible.builtin.file:
    path: '/etc/apt/trusted.gpg.d/'
    state: directory
    mode: '0755'
  tags:
    - packages
  when: ansible_facts['distribution'] in ["Debian", "Ubuntu"]

- name: Install VS Code key (apt)
  become: true
  ansible.builtin.get_url:
    url: '{{ visual_studio_code_mirror }}/keys/microsoft.asc'
    dest: '/etc/apt/trusted.gpg.d/'
    mode: '0644'
    force: yes
  tags:
    - packages
  when: ansible_facts['distribution'] in ["Debian", "Ubuntu"]
  environment: "{{proxy_env}}"

- name: Install VS Code repo (apt)
  become: true
  ansible.builtin.apt_repository:
    repo: deb {{ visual_studio_code_mirror }}/repos/vscode stable main
    filename: vscode
    state: present
  tags:
    - packages
  when: ansible_facts['distribution'] in ["Debian", "Ubuntu"]

- name: Install VS Code (apt)
  become: true
  ansible.builtin.apt:
    name: code
    state: present
  tags:
    - packages
  when: ansible_facts['distribution'] in ["Debian", "Ubuntu"]
  environment: "{{proxy_env}}"

