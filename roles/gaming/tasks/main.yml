---
- name: Set OS distribution dependent variables
  include_vars: "os_{{ ansible_facts['distribution'] }}.yml"

- name: Install KDE dependency packages
  ansible.builtin.package:
    name: "{{ kde_dependency_packages }}"
    state: present
  tags:
    - packages
  when: desktop_environment == "kde"
  environment: "{{proxy_env}}"

- name: Install Gnome dependency packages
  ansible.builtin.package:
    name: "{{ gnome_dependency_packages }}"
    state: present
  tags:
    - packages
  when: desktop_environment == "gnome"
  environment: "{{proxy_env}}"

- name: Install gtk dependency packages
  ansible.builtin.package:
    name: "{{ gtk_dependency_packages }}"
    state: present
  tags:
    - packages
  when: desktop_environment == "xfce"
  environment: "{{proxy_env}}"

- name: Install packages
  ansible.builtin.package:
    name: 
      - ttf-liberation
      - vulkan-icd-loader
      - lib32-vulkan-icd-loader
      - steam
      - lib32-systemd
      - timidity++
      - freepats-general-midi
      - soundfont-fluid
      - lib32-gnutls
      - lutris  # <-- Lutris is a Gnome package
      - gamemode
      - gvfs
      - innoextract
      - lib32-gamemode
      - lib32-libva
      - lib32-libcanberra
      - lib32-vkd3d
      - vkd3d
      - wine
      - xorg-xgamma
    state: present
  tags:
    - packages
  environment: "{{proxy_env}}"

- name: Install AUR pacakges
  kewlfft.aur.aur:
    name: 
      - dosbox-staging  # <-- Requires qt6. Is is worth it?
      - heroic-games-launcher-bin
      - gamehub
    state: present
  tags:
    - aur
    - packages
  become: "yes"
  become_user: "{{ aur.builder }}"
  when: ansible_facts['distribution'] == "Archlinux"
  environment: "{{proxy_env}}"

# - name: Configure 
#   ansible.builtin.template:
#     src: 
#     dest: /
#     backup: true
#   notify: 

# - name: Create file
#   ansible.builtin.copy:
#     src: 
#     dest: /
#     owner: "{{ remote_user.name }}"
#     group: "{{ remote_user.group }}"
#     backup: true
#   notify: 

# - name: Enable and start service
#   service:
#     name: .service
#     enabled: yes
#     state: started

# - include_tasks: .yml
#   when: ansible_facts['distribution'] == "DistroName"
