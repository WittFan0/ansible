---
- name: Set OS distribution dependent variables
  include_vars: "os_{{ ansible_facts['distribution'] }}.yml"

- name: Add hosts
  ansible.builtin.blockinfile:
    path: /etc/hosts
    block: | 
      127.0.0.1  localhost
      127.0.1.1  {{ hostname }}
      ::1        localhost ip6-localhost ip6-loopback
      ff02::1    ip6-allnodes
      ff02::2    ip6-allrouters
      192.168.40.1  router.q.qw  router
      192.168.40.2  office.q.qw  office
      192.168.40.4  mythbox.q.qw  mythbox
      192.168.40.5  taichi.q.qw  taichi
      192.168.40.199  dan.q.qw  dan
    insertafter: 'EOF'
    mode: '0644'
    backup: true

- name: Enable pacman color
  ansible.builtin.lineinfile:
    path: /etc/pacman.conf
    regexp: '^Color'
    line: Color
    insertafter: '^\[options\]'
    backup: true
  tags:
    - packages
  when: ansible_facts['distribution'] == "Archlinux"

- name: Enable pacman parallel downloads
  ansible.builtin.lineinfile:
    path: /etc/pacman.conf
    regexp: '^ParallelDownloads'
    line: ParallelDownloads = 5
    insertafter: '^\[options\]'
    backup: true
  tags:
    - packages
  when: ansible_facts['distribution'] == "Archlinux"

- name: Enable pacman multilib
  ansible.builtin.blockinfile:
    path: /etc/pacman.conf
    block: | 
      [multilib]
      Include = /etc/pacman.d/mirrorlist
    insertafter: 'EOF'
    backup: true
  tags:
    - packages
  when: ansible_facts['distribution'] == "Archlinux"

- name: Create pacman hook directory
  file: path=/etc/pacman.d/hooks
        state=directory
  tags:
    - packages
  when: ansible_facts['distribution'] == "Archlinux"

- name: Get packages from proxy server
  ansible.builtin.copy:
    content: Server = http://arch.mirror.constant.com/$repo/os/$arch
    dest: /etc/pacman.d/mirrorlist
    backup: yes
  tags:
    - packages
  when: ansible_facts['distribution'] == "Archlinux"

# - name: Install reflector
#   community.general.pacman:
#     update_cache: true
#     name: reflector 
#     state: present
#   tags:
#     - packages
#   when: ansible_facts['distribution'] == "Archlinux"

# - name: Update mirror list (Arch)
#   ansible.builtin.command: reflector --country US,Canada --completion-percent 90 --sort rate --latest 20 --protocol https --save /etc/pacman.d/mirrorlist
#   become: true
#   when: ansible_facts['distribution'] == "Archlinux"

# - name: Find fastest Ubuntu mirror
#   ansible.builtin.shell: curl -s http://mirrors.ubuntu.com/mirrors.txt | xargs -I {} sh -c 'echo $(curl -r 0-1024000 -s -w %{speed_download} -o /dev/null {}/ls-lR.gz) {}' | sort -g -r | head -1 | awk '{ print $2  }'
#   register: fastest_mirror
#   ignore_errors: true
#   when: ansible_facts['distribution'] in ["Debian", "Ubuntu"]

# - name: Switch to fastest Ubuntu mirror
#   ansible.builtin.replace:
#     path: /etc/apt/sources.list
#     regexp: deb http://us.archive.ubuntu.com/ubuntu
#     replace: deb {{ fastest_mirror }}
#     backup: true
#   when: ansible_facts['distribution'] in ["Debian", "Ubuntu"]

- name: Update package cache and upgrade (Arch)
  community.general.pacman:
    update_cache: true
    upgrade: true
  tags:
    - packages
  when: ansible_facts['distribution'] == "Archlinux"
  notify: reboot_system

- name: Update package cache and upgrade (Debian)
  ansible.builtin.apt: 
    update_cache: yes
    cache_valid_time: 3600  # Only run "update_cache=yes" if the last one is more than 3600 seconds ago
    name: "*"
    state: latest
    autoclean: yes
    autoremove: yes
  tags:
    - packages
  when: ansible_facts['distribution'] in ["Debian", "Ubuntu"]
  
- name: Install distro base packages
  ansible.builtin.package:
    name: "{{ distro_packages }}" 
    state: present
    update_cache: true
  tags:
    - packages
  notify: reboot_system

- name: Install base packages
  ansible.builtin.package:
    name: "{{ base_packages }}"
    state: present
    update_cache: true
  tags:
    - packages
  notify: reboot_system

- name: Enable power profiles
  service:
    name: power-profiles-daemon.service
    enabled: yes
    state: started

- name: Reboot if necessary
  meta: flush_handlers
  tags:
    - packages
